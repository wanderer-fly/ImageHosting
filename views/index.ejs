<!DOCTYPE html>
<html>
<head>
    <title>Image Upload</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles.css">
</head>
<body>

    <header>
        <% if (username) { %>
            <span>Welcome, <%= username %>!</span>
        <% } else { %>
            <button id="loginBtn">Login</button>
        <% } %>
    </header>
    
    <!-- Login window element -->
    <div id="loginModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <form id="loginForm">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
                <button type="submit">Login</button>
            </form>
        </div>
    </div>

    <!-- Share window element -->
    <div id="shareWindow" class="modal" style="display: none;">
        <div class="modal-content shareWindow" style="display: flex; flex-direction: column;">
            <span class="close" id="closeShareWindow">&times;</span>
            <h2>Share</h2>
            <input type="text" id="linkInput">
            <button onclick="copyLink()">Copy Link</button>
            <span>Use simple syntax here to filter User-Agent <br>e.g. huawei,xiaomi,baidu|https://google.com</span>
            <input type="text" id="uaFilter" style="width: 80%;">
        </div>
    </div>

    <div class="container">
        <h1>Upload Image</h1>
        <form id="uploadForm" action="/upload" method="post" enctype="multipart/form-data">
            <!-- Hidden input to trigger file selection -->
            <input type="file" name="image" id="fileInput" class="custom-file-input" required />
            <!-- Custom file input label -->
            <label for="fileInput" class="custom-file-label">Choose File</label>
            <!-- Password input -->
            <input type="password" name="password" placeholder="Enter password for this image (optional)" />
            <!-- Submit button -->
            <button type="submit">Upload</button>
        </form>

        <h2>Uploaded Images</h2>
        <ul id="imageList">
            
        </ul>
    </div>

    <!-- Notification element -->
    <div id="notification" class="notification"></div>

    <script>
        document.getElementById('closeShareWindow').addEventListener('click', () => {
            document.getElementById('shareWindow').style.display = 'none' // I'm just lazy to uniform the layout
        })

        document.getElementById('uploadForm').addEventListener('submit', function(event){
            event.preventDefault()

            var xhr = new XMLHttpRequest()
            xhr.open('POST', '/upload', true)
            xhr.setRequestHeader('Authorization', localStorage.getItem('token'))

            xhr.onreadystatechange = function() {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    showNotification('File uploaded')
                    refreshImageList()
                } else {
                    showNotification(`Error on uploading file: ${xhr.status}`)
                }
            }

            xhr.send(new FormData(event.target))
        })

        document.addEventListener('DOMContentLoaded', () => {
            const loginBtn = document.getElementById('loginBtn')
            const loginModal = document.getElementById('loginModal')
            const shareModal = document.getElementById('shareWindow')
            const closeBtn = document.getElementsByClassName('close')[0]
            const loginForm = document.getElementById('loginForm')
        
            loginBtn.onclick = () => {
                loginModal.style.display = 'block'
            }
        
            closeBtn.onclick = () => {
                loginModal.style.display = 'none'
            }
        
            window.onclick = (event) => {
                if (event.target == loginModal) {
                    loginModal.style.display = 'none'
                }
            }
        
            loginForm.onsubmit = async (event) => {
                event.preventDefault()
                const formData = new FormData(loginForm)
                const data = Object.fromEntries(formData.entries())
            
                const response = await fetch('/api/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
            
                if (response.ok) {
                    const data = await response.json()
                    document.cookie = `token=${data.token}; max-age=86400`
                    localStorage.setItem('token', data.token)
                    localStorage.setItem('username', data.username)
                    console.log(data)
                    showNotification(`You are logged in as ${data.username}`)
                    loginModal.style.display = 'none'
                    document.getElementById('loginBtn').innerText = data.username
                } else {
                    showNotification('Login failed')
                }
            }
        })

        // For easier to read!
        document.addEventListener('DOMContentLoaded', () => {

            refreshImageList()

            const username = localStorage.getItem('username');
            if (username) {
                document.getElementById('loginBtn').innerText = username;
            }
        })

        async function fetchLink(link, uaFilter) {
            try {
                const response = await fetch('/generate-short-url', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ longUrl: link, uaFilter: uaFilter })
                })
                const data = await response.json()
                const shortLink = `<%= process.env.BASE_URL %>/s/${data.shortUrl}`
                document.getElementById('linkInput').value = shortLink
                return shortLink
            } catch (err) {
                showNotification('Failed to generate link')
                console.log(err)
                throw err
            }
        }

        async function copyLink() {
            const link = document.getElementById('linkInput').value
            const uaFilter = document.getElementById('uaFilter').value
        
            try {
                const shortLink = await fetchLink(link, uaFilter)
                const clipboardItem = new ClipboardItem({ 'text/plain': new Blob([shortLink], { type: 'text/plain' }) })
            
                await navigator.clipboard.write([clipboardItem])
                showNotification('Link copied to clipboard')
            } catch (err) {
                showNotification('Failed to copy link')
                console.error('Could not copy text: ', err)
            }
        }


        function showNotification(message) {
            const notification = document.getElementById('notification')
            notification.innerText = message
            notification.style.display = 'block'
            setTimeout(() => {
                notification.style.display = 'none'
            }, 2000)
        }

        function showShareWindow(link) {
            document.getElementById('shareWindow').style.display = 'flex'
            document.getElementById('linkInput').value = link
        }

        function refreshImageList() {
            fetch('/api/images', {
                method: 'GET',
            })
            .then(response => response.json())
            .then(images => {
                const imageList = document.getElementById('imageList')
                imageList.innerHTML = ''

                images.forEach(image => {
                    const listItem = document.createElement('li')
                    listItem.className = 'image-item'
                    listItem.innerHTML = `
                        <a href="/image/${image.filename}">${image.originalname}</a>
                        <p>${image.uploader}</p>
                        <p>${new Date(image.upload_time).toLocaleString()}</p>
                        <button class="copy-btn" onclick="showShareWindow('<%= process.env.BASE_URL %>' + '/image/' + \'${image.filename}\')">Share</button>
                    `
                    imageList.appendChild(listItem)
                })
            })
            .catch(error => console.error('Error:', error))
        }

        // Custom file input script
        document.getElementById('fileInput').addEventListener('change', function() {
            var fileName = this.files[0].name
            var nextSibling = this.nextElementSibling
            nextSibling.innerText = fileName
        })
    </script>
</body>
</html>
